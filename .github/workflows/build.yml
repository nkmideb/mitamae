name: build
on:
  push:
    branches:
      - master
      - build-* # to build without PR
    tags:
      - v*
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: "30 15 * * *" # 7:30 PST (-8), 8:30 PDT (-7)

env:
  OSXCROSS_REVISION: 4287300a5c96397a2ee9ab3942e66578a1982031
  XCODE_VERSION: '12.4'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install libraries
        run: sudo apt-get install bison git libonig-dev
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Integration test
        run: bundle exec rake test:integration

  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        arch: [x86_64, i686, armhf, aarch64]
      fail-fast: false
    steps:
      - name: Install libraries
        run: sudo apt-get install bison git libonig-dev
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Build ${{ matrix.os }}-${{ matrix.arch }} binary
        run: bundle exec rake release:build:${{ matrix.os }}-${{ matrix.arch }} release:compress

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: mitamae-${{ matrix.arch }}-${{ matrix.os }}
          path: mitamae-build/

  macos-sdk:
    runs-on: macos-latest
    steps:
      - uses: actions/cache@v2
        id: macos-sdk-cache
        with:
          key: macos-sdk-${{ env.OSXCROSS_REVISION }}-${{ env.XCODE_VERSION }}
          path: osxcross/tarballs
      - name: Package MacOSX SDK
        if: steps.macos-sdk-cache.outputs.cache-hit != 'true'
        run: |
          curl -sSLf https://github.com/tpoechtrager/osxcross/archive/${OSXCROSS_REVISION}.tar.gz | tar zxf -
          mv osxcross-${OSXCROSS_REVISION} osxcross
          cd osxcross
          XCODEDIR=/Applications/Xcode_${XCODE_VERSION}.app tools/gen_sdk_package.sh
          mv MacOSX*.sdk.tar.xz tarballs/

  osxcross:
    runs-on: ubuntu-latest
    needs:
      - macos-sdk
    steps:
      - name: Download osxcross
        run: |
          curl -sSLf https://github.com/tpoechtrager/osxcross/archive/${OSXCROSS_REVISION}.tar.gz | tar zxf -
          mv osxcross-${OSXCROSS_REVISION} osxcross
      - uses: actions/cache@v2
        with:
          key: macos-sdk-${{ env.OSXCROSS_REVISION }}-${{ env.XCODE_VERSION }}
          path: osxcross/tarballs
      - uses: actions/cache@v2
        id: osxcross-cache
        with:
          key: osxcross-${{ runner.os }}-${{ env.OSXCROSS_REVISION }}-${{ env.XCODE_VERSION }}
          path: osxcross/target
      - name: Build osxcross
        if: steps.osxcross-cache.outputs.cache-hit != 'true'
        run: UNATTENDED=1 ./build.sh
        working-directory: osxcross

  osxcross-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [darwin]
        arch: [x86_64, aarch64]
      fail-fast: false
    needs:
      - osxcross
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - uses: actions/cache@v2
        id: osxcross-cache
        with:
          key: osxcross-${{ runner.os }}-${{ env.OSXCROSS_REVISION }}-${{ env.XCODE_VERSION }}
          path: osxcross/target
      - name: Build mitamae
        run: |
          export PATH="$PWD/osxcross/target/bin:$PATH"
          bundle exec rake compile BUILD_TARGET="${{ matrix.os }}-${{ matrix.arch }}"
          mkdir -p mitamae-build
          cp "mruby/build/${{ matrix.os }}-${{ matrix.arch }}/bin/mitamae" "mitamae-build/mitamae-${{ matrix.arch }}-${{ matrix.os }}"
          cd mitamae-build
          tar zcvf "mitamae-${{ matrix.arch }}-${{ matrix.os }}.tar.gz" "mitamae-${{ matrix.arch }}-${{ matrix.os }}"
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: mitamae-${{ matrix.arch }}-${{ matrix.os }}
          path: mitamae-build/

  release:
    runs-on: ubuntu-latest
    needs:
      - test
      - docker-build
      - osxcross-build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: mitamae-x86_64-linux
          path: mitamae-build/
      - uses: actions/download-artifact@v1
        with:
          name: mitamae-i686-linux
          path: mitamae-build/
      - uses: actions/download-artifact@v1
        with:
          name: mitamae-armhf-linux
          path: mitamae-build/
      - uses: actions/download-artifact@v1
        with:
          name: mitamae-aarch64-linux
          path: mitamae-build/
      - uses: actions/download-artifact@v1
        with:
          name: mitamae-x86_64-darwin
          path: mitamae-build/
      - uses: actions/download-artifact@v1
        with:
          name: mitamae-aarch64-darwin
          path: mitamae-build/

      - name: Release
        run: |
          export VERSION=$(echo "$GITHUB_REF" | sed -e 's!refs/tags/!!')
          curl -L "https://github.com/tcnksm/ghr/releases/download/${GHR_VERSION}/ghr_${GHR_VERSION}_linux_amd64.tar.gz" | tar xvz
          "ghr_${GHR_VERSION}_linux_amd64/ghr" -u itamae-kitchen -r mitamae -replace -n "$VERSION" "$VERSION" mitamae-build/
        env:
          GHR_VERSION: v0.13.0
          GITHUB_TOKEN: ${{ secrets.githubtoken }}
